scalar DateTime

type Query {
  organizationList: [Organization!]!
  seasonList: [Season!]!
  divisionList: [Division!]!
  positionList: [Position!]!
}

type Mutation {
  createOrganization(input: OrganizationInput!): OrganizationPayload!
}

type InputError {
  key: String!
  message: String!
}

input OrganizationInput {
  name: String
  email: String
  websiteUrl: String
}

type OrganizationPayload {
  organization: Organization
  errors: [InputError!]!
}

type Organization @key(fields: "id") {
  id: ID!
  name: String
  email: String
  websiteUrl: String
}

type Season @key(fields: "id") {
  id: ID!
  organization: Organization!
  name: String
  startDate: DateTime!
  endDate: DateTime!
}

type Division @key(fields: "id") {
  id: ID!
  season: Season!
  name: String
}

type Position @key(fields: "id") {
  id: ID!
  division: Division!
  name: String
}
